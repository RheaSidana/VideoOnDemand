// Code generated by mockery v2.22.1. DO NOT EDIT.

package mocks

import (
	model "vod/model"

	mock "github.com/stretchr/testify/mock"
)

// RedisRepository is an autogenerated mock type for the RedisRepository type
type RedisRepository struct {
	mock.Mock
}

// GetFromRedis provides a mock function with given fields: videoMD
func (_m *RedisRepository) GetFromRedis(videoMD model.VideoLinks) ([]model.VideoLinks, error) {
	ret := _m.Called(videoMD)

	var r0 []model.VideoLinks
	var r1 error
	if rf, ok := ret.Get(0).(func(model.VideoLinks) ([]model.VideoLinks, error)); ok {
		return rf(videoMD)
	}
	if rf, ok := ret.Get(0).(func(model.VideoLinks) []model.VideoLinks); ok {
		r0 = rf(videoMD)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]model.VideoLinks)
		}
	}

	if rf, ok := ret.Get(1).(func(model.VideoLinks) error); ok {
		r1 = rf(videoMD)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// SetInRedis provides a mock function with given fields: videoMetadata
func (_m *RedisRepository) SetInRedis(videoMetadata model.VideoLinks) error {
	ret := _m.Called(videoMetadata)

	var r0 error
	if rf, ok := ret.Get(0).(func(model.VideoLinks) error); ok {
		r0 = rf(videoMetadata)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

type mockConstructorTestingTNewRedisRepository interface {
	mock.TestingT
	Cleanup(func())
}

// NewRedisRepository creates a new instance of RedisRepository. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewRedisRepository(t mockConstructorTestingTNewRedisRepository) *RedisRepository {
	mock := &RedisRepository{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
